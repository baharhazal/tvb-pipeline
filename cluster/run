#!/bin/bash

function getValue {
    kw=$1
    for str in ${@:2}
    do
        IFS='=' read -a pair <<< "$str"
        if [ "${pair[0]}" == "SUBJECT" ]; then
           echo ${pair[1]}
           return
        fi
    done
}

function runSubject {
    # Commented ?
    if [[ "$*" =~ [:space:]*\#.* ]]
    then
        return
    fi

    subject=`getValue SUBJECT "$@"`
    if [[ -z $subject ]]
    then
        echo "Missing SUBJECT"
        return 1
    fi

    mkdir -p $subjects_dir/_logs
    outfile=$subjects_dir/_logs/${subject}.%j.stdout
    errfile=$subjects_dir/_logs/${subject}.%j.stderr

    echo "$@"
    $submit_cmd -o $outfile -e $errfile $run_one_path "$@"
}


# abs path to cluster/run-one script, regardless of
# working directory of invocation
run_one_path=$(cd $(dirname $0) && pwd)/run-one
pipeline_dir=$(cd $(dirname $0)/.. && pwd)

# Submit using SLURM
submit_cmd="sbatch -p dev -N 1 -n 1 --exclude=n01 --mem=60G --exclusive --export=PIPELINE_DIR=${pipeline_dir},ALL"

subjects_dir=${SUBJECTS_DIR:-$(pwd)/fs}

if [ "$#" -ne 1 ]
then
    runSubject $@
else
    while read LINE
    do
        # Split the quoted arguments correctly
        args=()
        while read elem; do
            args+=("$elem")
        done < <(echo "$LINE" | xargs -n 1)

        runSubject "${args[@]}"
    done < $1
fi
